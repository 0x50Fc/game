// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Value.proto

#include "Value.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace kk {
namespace proto {
class Value_Vec4DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Vec4>
      _instance;
} _Value_Vec4_default_instance_;
class Value_Mat4x4DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Mat4x4>
      _instance;
} _Value_Mat4x4_default_instance_;
class Value_Vec3DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Vec3>
      _instance;
} _Value_Vec3_default_instance_;
class Value_Mat3x3DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Mat3x3>
      _instance;
} _Value_Mat3x3_default_instance_;
class Value_Vec2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Vec2>
      _instance;
} _Value_Vec2_default_instance_;
class Value_Mat2x2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Mat2x2>
      _instance;
} _Value_Mat2x2_default_instance_;
class ValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value>
      _instance;
} _Value_default_instance_;
}  // namespace proto
}  // namespace kk
namespace protobuf_Value_2eproto {
void InitDefaultsValue_Vec4Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::kk::proto::_Value_Vec4_default_instance_;
    new (ptr) ::kk::proto::Value_Vec4();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kk::proto::Value_Vec4::InitAsDefaultInstance();
}

void InitDefaultsValue_Vec4() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsValue_Vec4Impl);
}

void InitDefaultsValue_Mat4x4Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Value_2eproto::InitDefaultsValue_Vec4();
  {
    void* ptr = &::kk::proto::_Value_Mat4x4_default_instance_;
    new (ptr) ::kk::proto::Value_Mat4x4();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kk::proto::Value_Mat4x4::InitAsDefaultInstance();
}

void InitDefaultsValue_Mat4x4() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsValue_Mat4x4Impl);
}

void InitDefaultsValue_Vec3Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::kk::proto::_Value_Vec3_default_instance_;
    new (ptr) ::kk::proto::Value_Vec3();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kk::proto::Value_Vec3::InitAsDefaultInstance();
}

void InitDefaultsValue_Vec3() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsValue_Vec3Impl);
}

void InitDefaultsValue_Mat3x3Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Value_2eproto::InitDefaultsValue_Vec3();
  {
    void* ptr = &::kk::proto::_Value_Mat3x3_default_instance_;
    new (ptr) ::kk::proto::Value_Mat3x3();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kk::proto::Value_Mat3x3::InitAsDefaultInstance();
}

void InitDefaultsValue_Mat3x3() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsValue_Mat3x3Impl);
}

void InitDefaultsValue_Vec2Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::kk::proto::_Value_Vec2_default_instance_;
    new (ptr) ::kk::proto::Value_Vec2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kk::proto::Value_Vec2::InitAsDefaultInstance();
}

void InitDefaultsValue_Vec2() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsValue_Vec2Impl);
}

void InitDefaultsValue_Mat2x2Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Value_2eproto::InitDefaultsValue_Vec2();
  {
    void* ptr = &::kk::proto::_Value_Mat2x2_default_instance_;
    new (ptr) ::kk::proto::Value_Mat2x2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kk::proto::Value_Mat2x2::InitAsDefaultInstance();
}

void InitDefaultsValue_Mat2x2() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsValue_Mat2x2Impl);
}

void InitDefaultsValueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Value_2eproto::InitDefaultsValue_Vec4();
  protobuf_Value_2eproto::InitDefaultsValue_Mat4x4();
  protobuf_Value_2eproto::InitDefaultsValue_Vec3();
  protobuf_Value_2eproto::InitDefaultsValue_Mat3x3();
  protobuf_Value_2eproto::InitDefaultsValue_Vec2();
  protobuf_Value_2eproto::InitDefaultsValue_Mat2x2();
  {
    void* ptr = &::kk::proto::_Value_default_instance_;
    new (ptr) ::kk::proto::Value();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kk::proto::Value::InitAsDefaultInstance();
}

void InitDefaultsValue() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsValueImpl);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Vec4, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Vec4, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Vec4, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Vec4, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Vec4, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Vec4, w_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Mat4x4, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Mat4x4, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Mat4x4, m0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Mat4x4, m1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Mat4x4, m2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Mat4x4, m4_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Vec3, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Vec3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Vec3, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Vec3, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Vec3, z_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Mat3x3, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Mat3x3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Mat3x3, m0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Mat3x3, m1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Mat3x3, m2_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Vec2, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Vec2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Vec2, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Vec2, y_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Mat2x2, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Mat2x2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Mat2x2, m0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value_Mat2x2, m1_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value, int32_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value, int64_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value, double_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value, float_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value, bool_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value, string_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value, vec4_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value, mat4x4_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value, vec3_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value, mat3x3_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value, vec2_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Value, mat2x2_value_),
  8,
  7,
  10,
  9,
  11,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::kk::proto::Value_Vec4)},
  { 13, 22, sizeof(::kk::proto::Value_Mat4x4)},
  { 26, 34, sizeof(::kk::proto::Value_Vec3)},
  { 37, 45, sizeof(::kk::proto::Value_Mat3x3)},
  { 48, 55, sizeof(::kk::proto::Value_Vec2)},
  { 57, 64, sizeof(::kk::proto::Value_Mat2x2)},
  { 66, 83, sizeof(::kk::proto::Value)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::kk::proto::_Value_Vec4_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kk::proto::_Value_Mat4x4_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kk::proto::_Value_Vec3_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kk::proto::_Value_Mat3x3_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kk::proto::_Value_Vec2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kk::proto::_Value_Mat2x2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kk::proto::_Value_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Value.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013Value.proto\022\010kk.proto\"\332\006\n\005Value\022\023\n\013int"
      "32_value\030\001 \001(\005\022\023\n\013int64_value\030\002 \001(\003\022\024\n\014d"
      "ouble_value\030\003 \001(\001\022\023\n\013float_value\030\004 \001(\002\022\022"
      "\n\nbool_value\030\005 \001(\010\022\024\n\014string_value\030\006 \001(\t"
      "\022(\n\nvec4_value\030\007 \001(\0132\024.kk.proto.Value.Ve"
      "c4\022,\n\014mat4x4_value\030\010 \001(\0132\026.kk.proto.Valu"
      "e.Mat4x4\022(\n\nvec3_value\030\t \001(\0132\024.kk.proto."
      "Value.Vec3\022,\n\014mat3x3_value\030\n \001(\0132\026.kk.pr"
      "oto.Value.Mat3x3\022(\n\nvec2_value\030\013 \001(\0132\024.k"
      "k.proto.Value.Vec2\022,\n\014mat2x2_value\030\014 \001(\013"
      "2\026.kk.proto.Value.Mat2x2\0322\n\004Vec4\022\t\n\001x\030\001 "
      "\002(\002\022\t\n\001y\030\002 \002(\002\022\t\n\001z\030\003 \002(\002\022\t\n\001w\030\004 \002(\002\032\220\001\n"
      "\006Mat4x4\022 \n\002m0\030\001 \002(\0132\024.kk.proto.Value.Vec"
      "4\022 \n\002m1\030\002 \002(\0132\024.kk.proto.Value.Vec4\022 \n\002m"
      "2\030\003 \002(\0132\024.kk.proto.Value.Vec4\022 \n\002m4\030\004 \002("
      "\0132\024.kk.proto.Value.Vec4\032\'\n\004Vec3\022\t\n\001x\030\001 \002"
      "(\002\022\t\n\001y\030\002 \002(\002\022\t\n\001z\030\003 \002(\002\032n\n\006Mat3x3\022 \n\002m0"
      "\030\001 \002(\0132\024.kk.proto.Value.Vec3\022 \n\002m1\030\002 \002(\013"
      "2\024.kk.proto.Value.Vec3\022 \n\002m2\030\003 \002(\0132\024.kk."
      "proto.Value.Vec3\032\034\n\004Vec2\022\t\n\001x\030\001 \002(\002\022\t\n\001y"
      "\030\002 \002(\002\032L\n\006Mat2x2\022 \n\002m0\030\001 \002(\0132\024.kk.proto."
      "Value.Vec2\022 \n\002m1\030\002 \002(\0132\024.kk.proto.Value."
      "Vec2"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 884);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Value.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Value_2eproto
namespace kk {
namespace proto {

// ===================================================================

void Value_Vec4::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Vec4::kXFieldNumber;
const int Value_Vec4::kYFieldNumber;
const int Value_Vec4::kZFieldNumber;
const int Value_Vec4::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Vec4::Value_Vec4()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Value_2eproto::InitDefaultsValue_Vec4();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:kk.proto.Value.Vec4)
}
Value_Vec4::Value_Vec4(const Value_Vec4& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&w_) -
    reinterpret_cast<char*>(&x_)) + sizeof(w_));
  // @@protoc_insertion_point(copy_constructor:kk.proto.Value.Vec4)
}

void Value_Vec4::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&w_) -
      reinterpret_cast<char*>(&x_)) + sizeof(w_));
}

Value_Vec4::~Value_Vec4() {
  // @@protoc_insertion_point(destructor:kk.proto.Value.Vec4)
  SharedDtor();
}

void Value_Vec4::SharedDtor() {
}

void Value_Vec4::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Value_Vec4::descriptor() {
  ::protobuf_Value_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Value_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Vec4& Value_Vec4::default_instance() {
  ::protobuf_Value_2eproto::InitDefaultsValue_Vec4();
  return *internal_default_instance();
}

Value_Vec4* Value_Vec4::New(::google::protobuf::Arena* arena) const {
  Value_Vec4* n = new Value_Vec4;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Value_Vec4::Clear() {
// @@protoc_insertion_point(message_clear_start:kk.proto.Value.Vec4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&w_) -
        reinterpret_cast<char*>(&x_)) + sizeof(w_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Value_Vec4::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kk.proto.Value.Vec4)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float w = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_w();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kk.proto.Value.Vec4)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kk.proto.Value.Vec4)
  return false;
#undef DO_
}

void Value_Vec4::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kk.proto.Value.Vec4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // required float y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // required float z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // required float w = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->w(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kk.proto.Value.Vec4)
}

::google::protobuf::uint8* Value_Vec4::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kk.proto.Value.Vec4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // required float y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // required float z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // required float w = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->w(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kk.proto.Value.Vec4)
  return target;
}

size_t Value_Vec4::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kk.proto.Value.Vec4)
  size_t total_size = 0;

  if (has_x()) {
    // required float x = 1;
    total_size += 1 + 4;
  }

  if (has_y()) {
    // required float y = 2;
    total_size += 1 + 4;
  }

  if (has_z()) {
    // required float z = 3;
    total_size += 1 + 4;
  }

  if (has_w()) {
    // required float w = 4;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t Value_Vec4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kk.proto.Value.Vec4)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required float x = 1;
    total_size += 1 + 4;

    // required float y = 2;
    total_size += 1 + 4;

    // required float z = 3;
    total_size += 1 + 4;

    // required float w = 4;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Value_Vec4::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kk.proto.Value.Vec4)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Vec4* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Vec4>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kk.proto.Value.Vec4)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kk.proto.Value.Vec4)
    MergeFrom(*source);
  }
}

void Value_Vec4::MergeFrom(const Value_Vec4& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kk.proto.Value.Vec4)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    if (cached_has_bits & 0x00000008u) {
      w_ = from.w_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Value_Vec4::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kk.proto.Value.Vec4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Vec4::CopyFrom(const Value_Vec4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kk.proto.Value.Vec4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Vec4::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void Value_Vec4::Swap(Value_Vec4* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Vec4::InternalSwap(Value_Vec4* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(w_, other->w_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Value_Vec4::GetMetadata() const {
  protobuf_Value_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Value_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Mat4x4::InitAsDefaultInstance() {
  ::kk::proto::_Value_Mat4x4_default_instance_._instance.get_mutable()->m0_ = const_cast< ::kk::proto::Value_Vec4*>(
      ::kk::proto::Value_Vec4::internal_default_instance());
  ::kk::proto::_Value_Mat4x4_default_instance_._instance.get_mutable()->m1_ = const_cast< ::kk::proto::Value_Vec4*>(
      ::kk::proto::Value_Vec4::internal_default_instance());
  ::kk::proto::_Value_Mat4x4_default_instance_._instance.get_mutable()->m2_ = const_cast< ::kk::proto::Value_Vec4*>(
      ::kk::proto::Value_Vec4::internal_default_instance());
  ::kk::proto::_Value_Mat4x4_default_instance_._instance.get_mutable()->m4_ = const_cast< ::kk::proto::Value_Vec4*>(
      ::kk::proto::Value_Vec4::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Mat4x4::kM0FieldNumber;
const int Value_Mat4x4::kM1FieldNumber;
const int Value_Mat4x4::kM2FieldNumber;
const int Value_Mat4x4::kM4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Mat4x4::Value_Mat4x4()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Value_2eproto::InitDefaultsValue_Mat4x4();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:kk.proto.Value.Mat4x4)
}
Value_Mat4x4::Value_Mat4x4(const Value_Mat4x4& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_m0()) {
    m0_ = new ::kk::proto::Value_Vec4(*from.m0_);
  } else {
    m0_ = NULL;
  }
  if (from.has_m1()) {
    m1_ = new ::kk::proto::Value_Vec4(*from.m1_);
  } else {
    m1_ = NULL;
  }
  if (from.has_m2()) {
    m2_ = new ::kk::proto::Value_Vec4(*from.m2_);
  } else {
    m2_ = NULL;
  }
  if (from.has_m4()) {
    m4_ = new ::kk::proto::Value_Vec4(*from.m4_);
  } else {
    m4_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kk.proto.Value.Mat4x4)
}

void Value_Mat4x4::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&m0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&m4_) -
      reinterpret_cast<char*>(&m0_)) + sizeof(m4_));
}

Value_Mat4x4::~Value_Mat4x4() {
  // @@protoc_insertion_point(destructor:kk.proto.Value.Mat4x4)
  SharedDtor();
}

void Value_Mat4x4::SharedDtor() {
  if (this != internal_default_instance()) delete m0_;
  if (this != internal_default_instance()) delete m1_;
  if (this != internal_default_instance()) delete m2_;
  if (this != internal_default_instance()) delete m4_;
}

void Value_Mat4x4::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Value_Mat4x4::descriptor() {
  ::protobuf_Value_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Value_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Mat4x4& Value_Mat4x4::default_instance() {
  ::protobuf_Value_2eproto::InitDefaultsValue_Mat4x4();
  return *internal_default_instance();
}

Value_Mat4x4* Value_Mat4x4::New(::google::protobuf::Arena* arena) const {
  Value_Mat4x4* n = new Value_Mat4x4;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Value_Mat4x4::Clear() {
// @@protoc_insertion_point(message_clear_start:kk.proto.Value.Mat4x4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(m0_ != NULL);
      m0_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(m1_ != NULL);
      m1_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(m2_ != NULL);
      m2_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(m4_ != NULL);
      m4_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Value_Mat4x4::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kk.proto.Value.Mat4x4)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .kk.proto.Value.Vec4 m0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_m0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .kk.proto.Value.Vec4 m1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_m1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .kk.proto.Value.Vec4 m2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_m2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .kk.proto.Value.Vec4 m4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_m4()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kk.proto.Value.Mat4x4)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kk.proto.Value.Mat4x4)
  return false;
#undef DO_
}

void Value_Mat4x4::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kk.proto.Value.Mat4x4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .kk.proto.Value.Vec4 m0 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->m0_, output);
  }

  // required .kk.proto.Value.Vec4 m1 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->m1_, output);
  }

  // required .kk.proto.Value.Vec4 m2 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->m2_, output);
  }

  // required .kk.proto.Value.Vec4 m4 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->m4_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kk.proto.Value.Mat4x4)
}

::google::protobuf::uint8* Value_Mat4x4::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kk.proto.Value.Mat4x4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .kk.proto.Value.Vec4 m0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->m0_, deterministic, target);
  }

  // required .kk.proto.Value.Vec4 m1 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->m1_, deterministic, target);
  }

  // required .kk.proto.Value.Vec4 m2 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->m2_, deterministic, target);
  }

  // required .kk.proto.Value.Vec4 m4 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->m4_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kk.proto.Value.Mat4x4)
  return target;
}

size_t Value_Mat4x4::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kk.proto.Value.Mat4x4)
  size_t total_size = 0;

  if (has_m0()) {
    // required .kk.proto.Value.Vec4 m0 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->m0_);
  }

  if (has_m1()) {
    // required .kk.proto.Value.Vec4 m1 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->m1_);
  }

  if (has_m2()) {
    // required .kk.proto.Value.Vec4 m2 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->m2_);
  }

  if (has_m4()) {
    // required .kk.proto.Value.Vec4 m4 = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->m4_);
  }

  return total_size;
}
size_t Value_Mat4x4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kk.proto.Value.Mat4x4)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required .kk.proto.Value.Vec4 m0 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->m0_);

    // required .kk.proto.Value.Vec4 m1 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->m1_);

    // required .kk.proto.Value.Vec4 m2 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->m2_);

    // required .kk.proto.Value.Vec4 m4 = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->m4_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Value_Mat4x4::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kk.proto.Value.Mat4x4)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Mat4x4* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Mat4x4>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kk.proto.Value.Mat4x4)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kk.proto.Value.Mat4x4)
    MergeFrom(*source);
  }
}

void Value_Mat4x4::MergeFrom(const Value_Mat4x4& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kk.proto.Value.Mat4x4)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_m0()->::kk::proto::Value_Vec4::MergeFrom(from.m0());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_m1()->::kk::proto::Value_Vec4::MergeFrom(from.m1());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_m2()->::kk::proto::Value_Vec4::MergeFrom(from.m2());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_m4()->::kk::proto::Value_Vec4::MergeFrom(from.m4());
    }
  }
}

void Value_Mat4x4::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kk.proto.Value.Mat4x4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Mat4x4::CopyFrom(const Value_Mat4x4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kk.proto.Value.Mat4x4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Mat4x4::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (has_m0()) {
    if (!this->m0_->IsInitialized()) return false;
  }
  if (has_m1()) {
    if (!this->m1_->IsInitialized()) return false;
  }
  if (has_m2()) {
    if (!this->m2_->IsInitialized()) return false;
  }
  if (has_m4()) {
    if (!this->m4_->IsInitialized()) return false;
  }
  return true;
}

void Value_Mat4x4::Swap(Value_Mat4x4* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Mat4x4::InternalSwap(Value_Mat4x4* other) {
  using std::swap;
  swap(m0_, other->m0_);
  swap(m1_, other->m1_);
  swap(m2_, other->m2_);
  swap(m4_, other->m4_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Value_Mat4x4::GetMetadata() const {
  protobuf_Value_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Value_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Vec3::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Vec3::kXFieldNumber;
const int Value_Vec3::kYFieldNumber;
const int Value_Vec3::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Vec3::Value_Vec3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Value_2eproto::InitDefaultsValue_Vec3();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:kk.proto.Value.Vec3)
}
Value_Vec3::Value_Vec3(const Value_Vec3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:kk.proto.Value.Vec3)
}

void Value_Vec3::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

Value_Vec3::~Value_Vec3() {
  // @@protoc_insertion_point(destructor:kk.proto.Value.Vec3)
  SharedDtor();
}

void Value_Vec3::SharedDtor() {
}

void Value_Vec3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Value_Vec3::descriptor() {
  ::protobuf_Value_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Value_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Vec3& Value_Vec3::default_instance() {
  ::protobuf_Value_2eproto::InitDefaultsValue_Vec3();
  return *internal_default_instance();
}

Value_Vec3* Value_Vec3::New(::google::protobuf::Arena* arena) const {
  Value_Vec3* n = new Value_Vec3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Value_Vec3::Clear() {
// @@protoc_insertion_point(message_clear_start:kk.proto.Value.Vec3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&z_) -
        reinterpret_cast<char*>(&x_)) + sizeof(z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Value_Vec3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kk.proto.Value.Vec3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kk.proto.Value.Vec3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kk.proto.Value.Vec3)
  return false;
#undef DO_
}

void Value_Vec3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kk.proto.Value.Vec3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // required float y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // required float z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kk.proto.Value.Vec3)
}

::google::protobuf::uint8* Value_Vec3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kk.proto.Value.Vec3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // required float y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // required float z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kk.proto.Value.Vec3)
  return target;
}

size_t Value_Vec3::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kk.proto.Value.Vec3)
  size_t total_size = 0;

  if (has_x()) {
    // required float x = 1;
    total_size += 1 + 4;
  }

  if (has_y()) {
    // required float y = 2;
    total_size += 1 + 4;
  }

  if (has_z()) {
    // required float z = 3;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t Value_Vec3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kk.proto.Value.Vec3)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required float x = 1;
    total_size += 1 + 4;

    // required float y = 2;
    total_size += 1 + 4;

    // required float z = 3;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Value_Vec3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kk.proto.Value.Vec3)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Vec3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Vec3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kk.proto.Value.Vec3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kk.proto.Value.Vec3)
    MergeFrom(*source);
  }
}

void Value_Vec3::MergeFrom(const Value_Vec3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kk.proto.Value.Vec3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Value_Vec3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kk.proto.Value.Vec3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Vec3::CopyFrom(const Value_Vec3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kk.proto.Value.Vec3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Vec3::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Value_Vec3::Swap(Value_Vec3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Vec3::InternalSwap(Value_Vec3* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Value_Vec3::GetMetadata() const {
  protobuf_Value_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Value_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Mat3x3::InitAsDefaultInstance() {
  ::kk::proto::_Value_Mat3x3_default_instance_._instance.get_mutable()->m0_ = const_cast< ::kk::proto::Value_Vec3*>(
      ::kk::proto::Value_Vec3::internal_default_instance());
  ::kk::proto::_Value_Mat3x3_default_instance_._instance.get_mutable()->m1_ = const_cast< ::kk::proto::Value_Vec3*>(
      ::kk::proto::Value_Vec3::internal_default_instance());
  ::kk::proto::_Value_Mat3x3_default_instance_._instance.get_mutable()->m2_ = const_cast< ::kk::proto::Value_Vec3*>(
      ::kk::proto::Value_Vec3::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Mat3x3::kM0FieldNumber;
const int Value_Mat3x3::kM1FieldNumber;
const int Value_Mat3x3::kM2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Mat3x3::Value_Mat3x3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Value_2eproto::InitDefaultsValue_Mat3x3();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:kk.proto.Value.Mat3x3)
}
Value_Mat3x3::Value_Mat3x3(const Value_Mat3x3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_m0()) {
    m0_ = new ::kk::proto::Value_Vec3(*from.m0_);
  } else {
    m0_ = NULL;
  }
  if (from.has_m1()) {
    m1_ = new ::kk::proto::Value_Vec3(*from.m1_);
  } else {
    m1_ = NULL;
  }
  if (from.has_m2()) {
    m2_ = new ::kk::proto::Value_Vec3(*from.m2_);
  } else {
    m2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kk.proto.Value.Mat3x3)
}

void Value_Mat3x3::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&m0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&m2_) -
      reinterpret_cast<char*>(&m0_)) + sizeof(m2_));
}

Value_Mat3x3::~Value_Mat3x3() {
  // @@protoc_insertion_point(destructor:kk.proto.Value.Mat3x3)
  SharedDtor();
}

void Value_Mat3x3::SharedDtor() {
  if (this != internal_default_instance()) delete m0_;
  if (this != internal_default_instance()) delete m1_;
  if (this != internal_default_instance()) delete m2_;
}

void Value_Mat3x3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Value_Mat3x3::descriptor() {
  ::protobuf_Value_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Value_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Mat3x3& Value_Mat3x3::default_instance() {
  ::protobuf_Value_2eproto::InitDefaultsValue_Mat3x3();
  return *internal_default_instance();
}

Value_Mat3x3* Value_Mat3x3::New(::google::protobuf::Arena* arena) const {
  Value_Mat3x3* n = new Value_Mat3x3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Value_Mat3x3::Clear() {
// @@protoc_insertion_point(message_clear_start:kk.proto.Value.Mat3x3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(m0_ != NULL);
      m0_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(m1_ != NULL);
      m1_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(m2_ != NULL);
      m2_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Value_Mat3x3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kk.proto.Value.Mat3x3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .kk.proto.Value.Vec3 m0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_m0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .kk.proto.Value.Vec3 m1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_m1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .kk.proto.Value.Vec3 m2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_m2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kk.proto.Value.Mat3x3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kk.proto.Value.Mat3x3)
  return false;
#undef DO_
}

void Value_Mat3x3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kk.proto.Value.Mat3x3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .kk.proto.Value.Vec3 m0 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->m0_, output);
  }

  // required .kk.proto.Value.Vec3 m1 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->m1_, output);
  }

  // required .kk.proto.Value.Vec3 m2 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->m2_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kk.proto.Value.Mat3x3)
}

::google::protobuf::uint8* Value_Mat3x3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kk.proto.Value.Mat3x3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .kk.proto.Value.Vec3 m0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->m0_, deterministic, target);
  }

  // required .kk.proto.Value.Vec3 m1 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->m1_, deterministic, target);
  }

  // required .kk.proto.Value.Vec3 m2 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->m2_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kk.proto.Value.Mat3x3)
  return target;
}

size_t Value_Mat3x3::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kk.proto.Value.Mat3x3)
  size_t total_size = 0;

  if (has_m0()) {
    // required .kk.proto.Value.Vec3 m0 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->m0_);
  }

  if (has_m1()) {
    // required .kk.proto.Value.Vec3 m1 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->m1_);
  }

  if (has_m2()) {
    // required .kk.proto.Value.Vec3 m2 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->m2_);
  }

  return total_size;
}
size_t Value_Mat3x3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kk.proto.Value.Mat3x3)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .kk.proto.Value.Vec3 m0 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->m0_);

    // required .kk.proto.Value.Vec3 m1 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->m1_);

    // required .kk.proto.Value.Vec3 m2 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->m2_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Value_Mat3x3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kk.proto.Value.Mat3x3)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Mat3x3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Mat3x3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kk.proto.Value.Mat3x3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kk.proto.Value.Mat3x3)
    MergeFrom(*source);
  }
}

void Value_Mat3x3::MergeFrom(const Value_Mat3x3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kk.proto.Value.Mat3x3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_m0()->::kk::proto::Value_Vec3::MergeFrom(from.m0());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_m1()->::kk::proto::Value_Vec3::MergeFrom(from.m1());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_m2()->::kk::proto::Value_Vec3::MergeFrom(from.m2());
    }
  }
}

void Value_Mat3x3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kk.proto.Value.Mat3x3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Mat3x3::CopyFrom(const Value_Mat3x3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kk.proto.Value.Mat3x3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Mat3x3::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_m0()) {
    if (!this->m0_->IsInitialized()) return false;
  }
  if (has_m1()) {
    if (!this->m1_->IsInitialized()) return false;
  }
  if (has_m2()) {
    if (!this->m2_->IsInitialized()) return false;
  }
  return true;
}

void Value_Mat3x3::Swap(Value_Mat3x3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Mat3x3::InternalSwap(Value_Mat3x3* other) {
  using std::swap;
  swap(m0_, other->m0_);
  swap(m1_, other->m1_);
  swap(m2_, other->m2_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Value_Mat3x3::GetMetadata() const {
  protobuf_Value_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Value_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Vec2::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Vec2::kXFieldNumber;
const int Value_Vec2::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Vec2::Value_Vec2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Value_2eproto::InitDefaultsValue_Vec2();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:kk.proto.Value.Vec2)
}
Value_Vec2::Value_Vec2(const Value_Vec2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:kk.proto.Value.Vec2)
}

void Value_Vec2::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Value_Vec2::~Value_Vec2() {
  // @@protoc_insertion_point(destructor:kk.proto.Value.Vec2)
  SharedDtor();
}

void Value_Vec2::SharedDtor() {
}

void Value_Vec2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Value_Vec2::descriptor() {
  ::protobuf_Value_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Value_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Vec2& Value_Vec2::default_instance() {
  ::protobuf_Value_2eproto::InitDefaultsValue_Vec2();
  return *internal_default_instance();
}

Value_Vec2* Value_Vec2::New(::google::protobuf::Arena* arena) const {
  Value_Vec2* n = new Value_Vec2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Value_Vec2::Clear() {
// @@protoc_insertion_point(message_clear_start:kk.proto.Value.Vec2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&x_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Value_Vec2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kk.proto.Value.Vec2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kk.proto.Value.Vec2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kk.proto.Value.Vec2)
  return false;
#undef DO_
}

void Value_Vec2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kk.proto.Value.Vec2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // required float y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kk.proto.Value.Vec2)
}

::google::protobuf::uint8* Value_Vec2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kk.proto.Value.Vec2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // required float y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kk.proto.Value.Vec2)
  return target;
}

size_t Value_Vec2::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kk.proto.Value.Vec2)
  size_t total_size = 0;

  if (has_x()) {
    // required float x = 1;
    total_size += 1 + 4;
  }

  if (has_y()) {
    // required float y = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t Value_Vec2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kk.proto.Value.Vec2)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required float x = 1;
    total_size += 1 + 4;

    // required float y = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Value_Vec2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kk.proto.Value.Vec2)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Vec2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Vec2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kk.proto.Value.Vec2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kk.proto.Value.Vec2)
    MergeFrom(*source);
  }
}

void Value_Vec2::MergeFrom(const Value_Vec2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kk.proto.Value.Vec2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Value_Vec2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kk.proto.Value.Vec2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Vec2::CopyFrom(const Value_Vec2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kk.proto.Value.Vec2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Vec2::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Value_Vec2::Swap(Value_Vec2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Vec2::InternalSwap(Value_Vec2* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Value_Vec2::GetMetadata() const {
  protobuf_Value_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Value_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Mat2x2::InitAsDefaultInstance() {
  ::kk::proto::_Value_Mat2x2_default_instance_._instance.get_mutable()->m0_ = const_cast< ::kk::proto::Value_Vec2*>(
      ::kk::proto::Value_Vec2::internal_default_instance());
  ::kk::proto::_Value_Mat2x2_default_instance_._instance.get_mutable()->m1_ = const_cast< ::kk::proto::Value_Vec2*>(
      ::kk::proto::Value_Vec2::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Mat2x2::kM0FieldNumber;
const int Value_Mat2x2::kM1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Mat2x2::Value_Mat2x2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Value_2eproto::InitDefaultsValue_Mat2x2();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:kk.proto.Value.Mat2x2)
}
Value_Mat2x2::Value_Mat2x2(const Value_Mat2x2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_m0()) {
    m0_ = new ::kk::proto::Value_Vec2(*from.m0_);
  } else {
    m0_ = NULL;
  }
  if (from.has_m1()) {
    m1_ = new ::kk::proto::Value_Vec2(*from.m1_);
  } else {
    m1_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kk.proto.Value.Mat2x2)
}

void Value_Mat2x2::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&m0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&m1_) -
      reinterpret_cast<char*>(&m0_)) + sizeof(m1_));
}

Value_Mat2x2::~Value_Mat2x2() {
  // @@protoc_insertion_point(destructor:kk.proto.Value.Mat2x2)
  SharedDtor();
}

void Value_Mat2x2::SharedDtor() {
  if (this != internal_default_instance()) delete m0_;
  if (this != internal_default_instance()) delete m1_;
}

void Value_Mat2x2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Value_Mat2x2::descriptor() {
  ::protobuf_Value_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Value_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Mat2x2& Value_Mat2x2::default_instance() {
  ::protobuf_Value_2eproto::InitDefaultsValue_Mat2x2();
  return *internal_default_instance();
}

Value_Mat2x2* Value_Mat2x2::New(::google::protobuf::Arena* arena) const {
  Value_Mat2x2* n = new Value_Mat2x2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Value_Mat2x2::Clear() {
// @@protoc_insertion_point(message_clear_start:kk.proto.Value.Mat2x2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(m0_ != NULL);
      m0_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(m1_ != NULL);
      m1_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Value_Mat2x2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kk.proto.Value.Mat2x2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .kk.proto.Value.Vec2 m0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_m0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .kk.proto.Value.Vec2 m1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_m1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kk.proto.Value.Mat2x2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kk.proto.Value.Mat2x2)
  return false;
#undef DO_
}

void Value_Mat2x2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kk.proto.Value.Mat2x2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .kk.proto.Value.Vec2 m0 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->m0_, output);
  }

  // required .kk.proto.Value.Vec2 m1 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->m1_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kk.proto.Value.Mat2x2)
}

::google::protobuf::uint8* Value_Mat2x2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kk.proto.Value.Mat2x2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .kk.proto.Value.Vec2 m0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->m0_, deterministic, target);
  }

  // required .kk.proto.Value.Vec2 m1 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->m1_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kk.proto.Value.Mat2x2)
  return target;
}

size_t Value_Mat2x2::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kk.proto.Value.Mat2x2)
  size_t total_size = 0;

  if (has_m0()) {
    // required .kk.proto.Value.Vec2 m0 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->m0_);
  }

  if (has_m1()) {
    // required .kk.proto.Value.Vec2 m1 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->m1_);
  }

  return total_size;
}
size_t Value_Mat2x2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kk.proto.Value.Mat2x2)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .kk.proto.Value.Vec2 m0 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->m0_);

    // required .kk.proto.Value.Vec2 m1 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->m1_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Value_Mat2x2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kk.proto.Value.Mat2x2)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Mat2x2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Mat2x2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kk.proto.Value.Mat2x2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kk.proto.Value.Mat2x2)
    MergeFrom(*source);
  }
}

void Value_Mat2x2::MergeFrom(const Value_Mat2x2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kk.proto.Value.Mat2x2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_m0()->::kk::proto::Value_Vec2::MergeFrom(from.m0());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_m1()->::kk::proto::Value_Vec2::MergeFrom(from.m1());
    }
  }
}

void Value_Mat2x2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kk.proto.Value.Mat2x2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Mat2x2::CopyFrom(const Value_Mat2x2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kk.proto.Value.Mat2x2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Mat2x2::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_m0()) {
    if (!this->m0_->IsInitialized()) return false;
  }
  if (has_m1()) {
    if (!this->m1_->IsInitialized()) return false;
  }
  return true;
}

void Value_Mat2x2::Swap(Value_Mat2x2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Mat2x2::InternalSwap(Value_Mat2x2* other) {
  using std::swap;
  swap(m0_, other->m0_);
  swap(m1_, other->m1_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Value_Mat2x2::GetMetadata() const {
  protobuf_Value_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Value_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value::InitAsDefaultInstance() {
  ::kk::proto::_Value_default_instance_._instance.get_mutable()->vec4_value_ = const_cast< ::kk::proto::Value_Vec4*>(
      ::kk::proto::Value_Vec4::internal_default_instance());
  ::kk::proto::_Value_default_instance_._instance.get_mutable()->mat4x4_value_ = const_cast< ::kk::proto::Value_Mat4x4*>(
      ::kk::proto::Value_Mat4x4::internal_default_instance());
  ::kk::proto::_Value_default_instance_._instance.get_mutable()->vec3_value_ = const_cast< ::kk::proto::Value_Vec3*>(
      ::kk::proto::Value_Vec3::internal_default_instance());
  ::kk::proto::_Value_default_instance_._instance.get_mutable()->mat3x3_value_ = const_cast< ::kk::proto::Value_Mat3x3*>(
      ::kk::proto::Value_Mat3x3::internal_default_instance());
  ::kk::proto::_Value_default_instance_._instance.get_mutable()->vec2_value_ = const_cast< ::kk::proto::Value_Vec2*>(
      ::kk::proto::Value_Vec2::internal_default_instance());
  ::kk::proto::_Value_default_instance_._instance.get_mutable()->mat2x2_value_ = const_cast< ::kk::proto::Value_Mat2x2*>(
      ::kk::proto::Value_Mat2x2::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value::kInt32ValueFieldNumber;
const int Value::kInt64ValueFieldNumber;
const int Value::kDoubleValueFieldNumber;
const int Value::kFloatValueFieldNumber;
const int Value::kBoolValueFieldNumber;
const int Value::kStringValueFieldNumber;
const int Value::kVec4ValueFieldNumber;
const int Value::kMat4X4ValueFieldNumber;
const int Value::kVec3ValueFieldNumber;
const int Value::kMat3X3ValueFieldNumber;
const int Value::kVec2ValueFieldNumber;
const int Value::kMat2X2ValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value::Value()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Value_2eproto::InitDefaultsValue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:kk.proto.Value)
}
Value::Value(const Value& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_string_value()) {
    string_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_value_);
  }
  if (from.has_vec4_value()) {
    vec4_value_ = new ::kk::proto::Value_Vec4(*from.vec4_value_);
  } else {
    vec4_value_ = NULL;
  }
  if (from.has_mat4x4_value()) {
    mat4x4_value_ = new ::kk::proto::Value_Mat4x4(*from.mat4x4_value_);
  } else {
    mat4x4_value_ = NULL;
  }
  if (from.has_vec3_value()) {
    vec3_value_ = new ::kk::proto::Value_Vec3(*from.vec3_value_);
  } else {
    vec3_value_ = NULL;
  }
  if (from.has_mat3x3_value()) {
    mat3x3_value_ = new ::kk::proto::Value_Mat3x3(*from.mat3x3_value_);
  } else {
    mat3x3_value_ = NULL;
  }
  if (from.has_vec2_value()) {
    vec2_value_ = new ::kk::proto::Value_Vec2(*from.vec2_value_);
  } else {
    vec2_value_ = NULL;
  }
  if (from.has_mat2x2_value()) {
    mat2x2_value_ = new ::kk::proto::Value_Mat2x2(*from.mat2x2_value_);
  } else {
    mat2x2_value_ = NULL;
  }
  ::memcpy(&int64_value_, &from.int64_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&bool_value_) -
    reinterpret_cast<char*>(&int64_value_)) + sizeof(bool_value_));
  // @@protoc_insertion_point(copy_constructor:kk.proto.Value)
}

void Value::SharedCtor() {
  _cached_size_ = 0;
  string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&vec4_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bool_value_) -
      reinterpret_cast<char*>(&vec4_value_)) + sizeof(bool_value_));
}

Value::~Value() {
  // @@protoc_insertion_point(destructor:kk.proto.Value)
  SharedDtor();
}

void Value::SharedDtor() {
  string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete vec4_value_;
  if (this != internal_default_instance()) delete mat4x4_value_;
  if (this != internal_default_instance()) delete vec3_value_;
  if (this != internal_default_instance()) delete mat3x3_value_;
  if (this != internal_default_instance()) delete vec2_value_;
  if (this != internal_default_instance()) delete mat2x2_value_;
}

void Value::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Value::descriptor() {
  ::protobuf_Value_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Value_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value& Value::default_instance() {
  ::protobuf_Value_2eproto::InitDefaultsValue();
  return *internal_default_instance();
}

Value* Value::New(::google::protobuf::Arena* arena) const {
  Value* n = new Value;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Value::Clear() {
// @@protoc_insertion_point(message_clear_start:kk.proto.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!string_value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*string_value_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(vec4_value_ != NULL);
      vec4_value_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(mat4x4_value_ != NULL);
      mat4x4_value_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(vec3_value_ != NULL);
      vec3_value_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(mat3x3_value_ != NULL);
      mat3x3_value_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(vec2_value_ != NULL);
      vec2_value_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(mat2x2_value_ != NULL);
      mat2x2_value_->Clear();
    }
  }
  int64_value_ = GOOGLE_LONGLONG(0);
  if (cached_has_bits & 3840u) {
    ::memset(&int32_value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bool_value_) -
        reinterpret_cast<char*>(&int32_value_)) + sizeof(bool_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kk.proto.Value)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 int32_value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_int32_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int32_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 int64_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_int64_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &int64_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double double_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_double_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &double_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float float_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_float_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &float_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bool_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_bool_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bool_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string string_value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_value().data(), static_cast<int>(this->string_value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kk.proto.Value.string_value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .kk.proto.Value.Vec4 vec4_value = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vec4_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .kk.proto.Value.Mat4x4 mat4x4_value = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mat4x4_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .kk.proto.Value.Vec3 vec3_value = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vec3_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .kk.proto.Value.Mat3x3 mat3x3_value = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mat3x3_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .kk.proto.Value.Vec2 vec2_value = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vec2_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .kk.proto.Value.Mat2x2 mat2x2_value = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mat2x2_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kk.proto.Value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kk.proto.Value)
  return false;
#undef DO_
}

void Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kk.proto.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 int32_value = 1;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->int32_value(), output);
  }

  // optional int64 int64_value = 2;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->int64_value(), output);
  }

  // optional double double_value = 3;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->double_value(), output);
  }

  // optional float float_value = 4;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->float_value(), output);
  }

  // optional bool bool_value = 5;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->bool_value(), output);
  }

  // optional string string_value = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kk.proto.Value.string_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->string_value(), output);
  }

  // optional .kk.proto.Value.Vec4 vec4_value = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->vec4_value_, output);
  }

  // optional .kk.proto.Value.Mat4x4 mat4x4_value = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->mat4x4_value_, output);
  }

  // optional .kk.proto.Value.Vec3 vec3_value = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->vec3_value_, output);
  }

  // optional .kk.proto.Value.Mat3x3 mat3x3_value = 10;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->mat3x3_value_, output);
  }

  // optional .kk.proto.Value.Vec2 vec2_value = 11;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->vec2_value_, output);
  }

  // optional .kk.proto.Value.Mat2x2 mat2x2_value = 12;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->mat2x2_value_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kk.proto.Value)
}

::google::protobuf::uint8* Value::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kk.proto.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 int32_value = 1;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->int32_value(), target);
  }

  // optional int64 int64_value = 2;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->int64_value(), target);
  }

  // optional double double_value = 3;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->double_value(), target);
  }

  // optional float float_value = 4;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->float_value(), target);
  }

  // optional bool bool_value = 5;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->bool_value(), target);
  }

  // optional string string_value = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kk.proto.Value.string_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->string_value(), target);
  }

  // optional .kk.proto.Value.Vec4 vec4_value = 7;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->vec4_value_, deterministic, target);
  }

  // optional .kk.proto.Value.Mat4x4 mat4x4_value = 8;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->mat4x4_value_, deterministic, target);
  }

  // optional .kk.proto.Value.Vec3 vec3_value = 9;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->vec3_value_, deterministic, target);
  }

  // optional .kk.proto.Value.Mat3x3 mat3x3_value = 10;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *this->mat3x3_value_, deterministic, target);
  }

  // optional .kk.proto.Value.Vec2 vec2_value = 11;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, *this->vec2_value_, deterministic, target);
  }

  // optional .kk.proto.Value.Mat2x2 mat2x2_value = 12;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, *this->mat2x2_value_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kk.proto.Value)
  return target;
}

size_t Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kk.proto.Value)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string string_value = 6;
    if (has_string_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
    }

    // optional .kk.proto.Value.Vec4 vec4_value = 7;
    if (has_vec4_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->vec4_value_);
    }

    // optional .kk.proto.Value.Mat4x4 mat4x4_value = 8;
    if (has_mat4x4_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->mat4x4_value_);
    }

    // optional .kk.proto.Value.Vec3 vec3_value = 9;
    if (has_vec3_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->vec3_value_);
    }

    // optional .kk.proto.Value.Mat3x3 mat3x3_value = 10;
    if (has_mat3x3_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->mat3x3_value_);
    }

    // optional .kk.proto.Value.Vec2 vec2_value = 11;
    if (has_vec2_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->vec2_value_);
    }

    // optional .kk.proto.Value.Mat2x2 mat2x2_value = 12;
    if (has_mat2x2_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->mat2x2_value_);
    }

    // optional int64 int64_value = 2;
    if (has_int64_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int64_value());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional int32 int32_value = 1;
    if (has_int32_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->int32_value());
    }

    // optional float float_value = 4;
    if (has_float_value()) {
      total_size += 1 + 4;
    }

    // optional double double_value = 3;
    if (has_double_value()) {
      total_size += 1 + 8;
    }

    // optional bool bool_value = 5;
    if (has_bool_value()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kk.proto.Value)
  GOOGLE_DCHECK_NE(&from, this);
  const Value* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kk.proto.Value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kk.proto.Value)
    MergeFrom(*source);
  }
}

void Value::MergeFrom(const Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kk.proto.Value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_string_value();
      string_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_value_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_vec4_value()->::kk::proto::Value_Vec4::MergeFrom(from.vec4_value());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_mat4x4_value()->::kk::proto::Value_Mat4x4::MergeFrom(from.mat4x4_value());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_vec3_value()->::kk::proto::Value_Vec3::MergeFrom(from.vec3_value());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_mat3x3_value()->::kk::proto::Value_Mat3x3::MergeFrom(from.mat3x3_value());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_vec2_value()->::kk::proto::Value_Vec2::MergeFrom(from.vec2_value());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_mat2x2_value()->::kk::proto::Value_Mat2x2::MergeFrom(from.mat2x2_value());
    }
    if (cached_has_bits & 0x00000080u) {
      int64_value_ = from.int64_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      int32_value_ = from.int32_value_;
    }
    if (cached_has_bits & 0x00000200u) {
      float_value_ = from.float_value_;
    }
    if (cached_has_bits & 0x00000400u) {
      double_value_ = from.double_value_;
    }
    if (cached_has_bits & 0x00000800u) {
      bool_value_ = from.bool_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kk.proto.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value::CopyFrom(const Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kk.proto.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value::IsInitialized() const {
  if (has_vec4_value()) {
    if (!this->vec4_value_->IsInitialized()) return false;
  }
  if (has_mat4x4_value()) {
    if (!this->mat4x4_value_->IsInitialized()) return false;
  }
  if (has_vec3_value()) {
    if (!this->vec3_value_->IsInitialized()) return false;
  }
  if (has_mat3x3_value()) {
    if (!this->mat3x3_value_->IsInitialized()) return false;
  }
  if (has_vec2_value()) {
    if (!this->vec2_value_->IsInitialized()) return false;
  }
  if (has_mat2x2_value()) {
    if (!this->mat2x2_value_->IsInitialized()) return false;
  }
  return true;
}

void Value::Swap(Value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value::InternalSwap(Value* other) {
  using std::swap;
  string_value_.Swap(&other->string_value_);
  swap(vec4_value_, other->vec4_value_);
  swap(mat4x4_value_, other->mat4x4_value_);
  swap(vec3_value_, other->vec3_value_);
  swap(mat3x3_value_, other->mat3x3_value_);
  swap(vec2_value_, other->vec2_value_);
  swap(mat2x2_value_, other->mat2x2_value_);
  swap(int64_value_, other->int64_value_);
  swap(int32_value_, other->int32_value_);
  swap(float_value_, other->float_value_);
  swap(double_value_, other->double_value_);
  swap(bool_value_, other->bool_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Value::GetMetadata() const {
  protobuf_Value_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Value_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace kk

// @@protoc_insertion_point(global_scope)

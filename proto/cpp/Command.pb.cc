// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Command.proto

#include "Command.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace kk {
namespace proto {
class Command_ElementNewDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Command_ElementNew>
      _instance;
} _Command_ElementNew_default_instance_;
class Command_ElementPropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Command_ElementProperty>
      _instance;
} _Command_ElementProperty_default_instance_;
class Command_ElementAddDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Command_ElementAdd>
      _instance;
} _Command_ElementAdd_default_instance_;
class Command_ElementRemoveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Command_ElementRemove>
      _instance;
} _Command_ElementRemove_default_instance_;
class Command_ElementActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Command_ElementAction>
      _instance;
} _Command_ElementAction_default_instance_;
class CommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Command>
      _instance;
} _Command_default_instance_;
}  // namespace proto
}  // namespace kk
namespace protobuf_Command_2eproto {
void InitDefaultsCommand_ElementNewImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::kk::proto::_Command_ElementNew_default_instance_;
    new (ptr) ::kk::proto::Command_ElementNew();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kk::proto::Command_ElementNew::InitAsDefaultInstance();
}

void InitDefaultsCommand_ElementNew() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCommand_ElementNewImpl);
}

void InitDefaultsCommand_ElementPropertyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Value_2eproto::InitDefaultsValue();
  {
    void* ptr = &::kk::proto::_Command_ElementProperty_default_instance_;
    new (ptr) ::kk::proto::Command_ElementProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kk::proto::Command_ElementProperty::InitAsDefaultInstance();
}

void InitDefaultsCommand_ElementProperty() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCommand_ElementPropertyImpl);
}

void InitDefaultsCommand_ElementAddImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::kk::proto::_Command_ElementAdd_default_instance_;
    new (ptr) ::kk::proto::Command_ElementAdd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kk::proto::Command_ElementAdd::InitAsDefaultInstance();
}

void InitDefaultsCommand_ElementAdd() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCommand_ElementAddImpl);
}

void InitDefaultsCommand_ElementRemoveImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::kk::proto::_Command_ElementRemove_default_instance_;
    new (ptr) ::kk::proto::Command_ElementRemove();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kk::proto::Command_ElementRemove::InitAsDefaultInstance();
}

void InitDefaultsCommand_ElementRemove() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCommand_ElementRemoveImpl);
}

void InitDefaultsCommand_ElementActionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Event_2eproto::InitDefaultsEvent();
  {
    void* ptr = &::kk::proto::_Command_ElementAction_default_instance_;
    new (ptr) ::kk::proto::Command_ElementAction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kk::proto::Command_ElementAction::InitAsDefaultInstance();
}

void InitDefaultsCommand_ElementAction() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCommand_ElementActionImpl);
}

void InitDefaultsCommandImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Command_2eproto::InitDefaultsCommand_ElementNew();
  protobuf_Command_2eproto::InitDefaultsCommand_ElementProperty();
  protobuf_Command_2eproto::InitDefaultsCommand_ElementAdd();
  protobuf_Command_2eproto::InitDefaultsCommand_ElementAction();
  {
    void* ptr = &::kk::proto::_Command_default_instance_;
    new (ptr) ::kk::proto::Command();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kk::proto::Command::InitAsDefaultInstance();
}

void InitDefaultsCommand() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCommandImpl);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command_ElementNew, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command_ElementNew, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command_ElementNew, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command_ElementNew, name_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command_ElementProperty, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command_ElementProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command_ElementProperty, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command_ElementProperty, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command_ElementProperty, value_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command_ElementAdd, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command_ElementAdd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command_ElementAdd, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command_ElementAdd, elementid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command_ElementRemove, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command_ElementRemove, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command_ElementRemove, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command_ElementAction, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command_ElementAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command_ElementAction, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command_ElementAction, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command_ElementAction, event_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command, element_new_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command, element_property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command, element_append_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command, element_before_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command, element_after_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command, element_remove_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kk::proto::Command, element_action_),
  8,
  7,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::kk::proto::Command_ElementNew)},
  { 9, 17, sizeof(::kk::proto::Command_ElementProperty)},
  { 20, 27, sizeof(::kk::proto::Command_ElementAdd)},
  { 29, 35, sizeof(::kk::proto::Command_ElementRemove)},
  { 36, 44, sizeof(::kk::proto::Command_ElementAction)},
  { 47, 61, sizeof(::kk::proto::Command)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::kk::proto::_Command_ElementNew_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kk::proto::_Command_ElementProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kk::proto::_Command_ElementAdd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kk::proto::_Command_ElementRemove_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kk::proto::_Command_ElementAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kk::proto::_Command_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Command.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rCommand.proto\022\010kk.proto\032\013Value.proto\032\013"
      "Event.proto\"\352\006\n\007Command\0221\n\004type\030\001 \002(\0162\026."
      "kk.proto.Command.Type:\013ELEMENT_NEW\022\021\n\tti"
      "mestamp\030\002 \002(\003\0221\n\013element_new\030\003 \001(\0132\034.kk."
      "proto.Command.ElementNew\022;\n\020element_prop"
      "erty\030\004 \001(\0132!.kk.proto.Command.ElementPro"
      "perty\0224\n\016element_append\030\005 \001(\0132\034.kk.proto"
      ".Command.ElementAdd\0224\n\016element_before\030\006 "
      "\001(\0132\034.kk.proto.Command.ElementAdd\0223\n\rele"
      "ment_after\030\007 \001(\0132\034.kk.proto.Command.Elem"
      "entAdd\0224\n\016element_remove\030\010 \001(\0132\034.kk.prot"
      "o.Command.ElementAdd\0227\n\016element_action\030\t"
      " \001(\0132\037.kk.proto.Command.ElementAction\032&\n"
      "\nElementNew\022\n\n\002id\030\001 \002(\005\022\014\n\004name\030\002 \002(\t\032J\n"
      "\017ElementProperty\022\n\n\002id\030\001 \002(\005\022\013\n\003key\030\002 \002("
      "\005\022\036\n\005value\030\003 \002(\0132\017.kk.proto.Value\032+\n\nEle"
      "mentAdd\022\n\n\002id\030\001 \002(\005\022\021\n\telementId\030\002 \002(\005\032\033"
      "\n\rElementRemove\022\n\n\002id\030\001 \002(\005\032I\n\rElementAc"
      "tion\022\n\n\002id\030\001 \002(\005\022\014\n\004name\030\002 \002(\t\022\036\n\005event\030"
      "\003 \001(\0132\017.kk.proto.Event\"\217\001\n\004Type\022\017\n\013ELEME"
      "NT_NEW\020\000\022\024\n\020ELEMENT_PROPERTY\020\001\022\022\n\016ELEMEN"
      "T_APPEND\020\002\022\022\n\016ELEMENT_BEFORE\020\003\022\021\n\rELEMEN"
      "T_AFTER\020\004\022\022\n\016ELEMENT_REMOVE\020\005\022\021\n\rELEMENT"
      "_EVENT\020\006"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 928);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Command.proto", &protobuf_RegisterTypes);
  ::protobuf_Value_2eproto::AddDescriptors();
  ::protobuf_Event_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Command_2eproto
namespace kk {
namespace proto {
const ::google::protobuf::EnumDescriptor* Command_Type_descriptor() {
  protobuf_Command_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Command_2eproto::file_level_enum_descriptors[0];
}
bool Command_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Command_Type Command::ELEMENT_NEW;
const Command_Type Command::ELEMENT_PROPERTY;
const Command_Type Command::ELEMENT_APPEND;
const Command_Type Command::ELEMENT_BEFORE;
const Command_Type Command::ELEMENT_AFTER;
const Command_Type Command::ELEMENT_REMOVE;
const Command_Type Command::ELEMENT_EVENT;
const Command_Type Command::Type_MIN;
const Command_Type Command::Type_MAX;
const int Command::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Command_ElementNew::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Command_ElementNew::kIdFieldNumber;
const int Command_ElementNew::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Command_ElementNew::Command_ElementNew()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Command_2eproto::InitDefaultsCommand_ElementNew();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:kk.proto.Command.ElementNew)
}
Command_ElementNew::Command_ElementNew(const Command_ElementNew& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:kk.proto.Command.ElementNew)
}

void Command_ElementNew::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

Command_ElementNew::~Command_ElementNew() {
  // @@protoc_insertion_point(destructor:kk.proto.Command.ElementNew)
  SharedDtor();
}

void Command_ElementNew::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Command_ElementNew::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Command_ElementNew::descriptor() {
  ::protobuf_Command_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Command_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Command_ElementNew& Command_ElementNew::default_instance() {
  ::protobuf_Command_2eproto::InitDefaultsCommand_ElementNew();
  return *internal_default_instance();
}

Command_ElementNew* Command_ElementNew::New(::google::protobuf::Arena* arena) const {
  Command_ElementNew* n = new Command_ElementNew;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Command_ElementNew::Clear() {
// @@protoc_insertion_point(message_clear_start:kk.proto.Command.ElementNew)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Command_ElementNew::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kk.proto.Command.ElementNew)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kk.proto.Command.ElementNew.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kk.proto.Command.ElementNew)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kk.proto.Command.ElementNew)
  return false;
#undef DO_
}

void Command_ElementNew::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kk.proto.Command.ElementNew)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kk.proto.Command.ElementNew.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kk.proto.Command.ElementNew)
}

::google::protobuf::uint8* Command_ElementNew::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kk.proto.Command.ElementNew)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kk.proto.Command.ElementNew.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kk.proto.Command.ElementNew)
  return target;
}

size_t Command_ElementNew::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kk.proto.Command.ElementNew)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  return total_size;
}
size_t Command_ElementNew::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kk.proto.Command.ElementNew)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Command_ElementNew::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kk.proto.Command.ElementNew)
  GOOGLE_DCHECK_NE(&from, this);
  const Command_ElementNew* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Command_ElementNew>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kk.proto.Command.ElementNew)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kk.proto.Command.ElementNew)
    MergeFrom(*source);
  }
}

void Command_ElementNew::MergeFrom(const Command_ElementNew& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kk.proto.Command.ElementNew)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Command_ElementNew::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kk.proto.Command.ElementNew)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Command_ElementNew::CopyFrom(const Command_ElementNew& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kk.proto.Command.ElementNew)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Command_ElementNew::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Command_ElementNew::Swap(Command_ElementNew* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Command_ElementNew::InternalSwap(Command_ElementNew* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Command_ElementNew::GetMetadata() const {
  protobuf_Command_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Command_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Command_ElementProperty::InitAsDefaultInstance() {
  ::kk::proto::_Command_ElementProperty_default_instance_._instance.get_mutable()->value_ = const_cast< ::kk::proto::Value*>(
      ::kk::proto::Value::internal_default_instance());
}
void Command_ElementProperty::clear_value() {
  if (value_ != NULL) value_->Clear();
  clear_has_value();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Command_ElementProperty::kIdFieldNumber;
const int Command_ElementProperty::kKeyFieldNumber;
const int Command_ElementProperty::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Command_ElementProperty::Command_ElementProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Command_2eproto::InitDefaultsCommand_ElementProperty();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:kk.proto.Command.ElementProperty)
}
Command_ElementProperty::Command_ElementProperty(const Command_ElementProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_value()) {
    value_ = new ::kk::proto::Value(*from.value_);
  } else {
    value_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&key_) -
    reinterpret_cast<char*>(&id_)) + sizeof(key_));
  // @@protoc_insertion_point(copy_constructor:kk.proto.Command.ElementProperty)
}

void Command_ElementProperty::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_) -
      reinterpret_cast<char*>(&value_)) + sizeof(key_));
}

Command_ElementProperty::~Command_ElementProperty() {
  // @@protoc_insertion_point(destructor:kk.proto.Command.ElementProperty)
  SharedDtor();
}

void Command_ElementProperty::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Command_ElementProperty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Command_ElementProperty::descriptor() {
  ::protobuf_Command_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Command_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Command_ElementProperty& Command_ElementProperty::default_instance() {
  ::protobuf_Command_2eproto::InitDefaultsCommand_ElementProperty();
  return *internal_default_instance();
}

Command_ElementProperty* Command_ElementProperty::New(::google::protobuf::Arena* arena) const {
  Command_ElementProperty* n = new Command_ElementProperty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Command_ElementProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:kk.proto.Command.ElementProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(value_ != NULL);
    value_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&key_) -
        reinterpret_cast<char*>(&id_)) + sizeof(key_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Command_ElementProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kk.proto.Command.ElementProperty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_key();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .kk.proto.Value value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kk.proto.Command.ElementProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kk.proto.Command.ElementProperty)
  return false;
#undef DO_
}

void Command_ElementProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kk.proto.Command.ElementProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 key = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->key(), output);
  }

  // required .kk.proto.Value value = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->value_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kk.proto.Command.ElementProperty)
}

::google::protobuf::uint8* Command_ElementProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kk.proto.Command.ElementProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 key = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->key(), target);
  }

  // required .kk.proto.Value value = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->value_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kk.proto.Command.ElementProperty)
  return target;
}

size_t Command_ElementProperty::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kk.proto.Command.ElementProperty)
  size_t total_size = 0;

  if (has_value()) {
    // required .kk.proto.Value value = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->value_);
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_key()) {
    // required int32 key = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key());
  }

  return total_size;
}
size_t Command_ElementProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kk.proto.Command.ElementProperty)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .kk.proto.Value value = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->value_);

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 key = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Command_ElementProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kk.proto.Command.ElementProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const Command_ElementProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Command_ElementProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kk.proto.Command.ElementProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kk.proto.Command.ElementProperty)
    MergeFrom(*source);
  }
}

void Command_ElementProperty::MergeFrom(const Command_ElementProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kk.proto.Command.ElementProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_value()->::kk::proto::Value::MergeFrom(from.value());
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      key_ = from.key_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Command_ElementProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kk.proto.Command.ElementProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Command_ElementProperty::CopyFrom(const Command_ElementProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kk.proto.Command.ElementProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Command_ElementProperty::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_value()) {
    if (!this->value_->IsInitialized()) return false;
  }
  return true;
}

void Command_ElementProperty::Swap(Command_ElementProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Command_ElementProperty::InternalSwap(Command_ElementProperty* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(id_, other->id_);
  swap(key_, other->key_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Command_ElementProperty::GetMetadata() const {
  protobuf_Command_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Command_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Command_ElementAdd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Command_ElementAdd::kIdFieldNumber;
const int Command_ElementAdd::kElementIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Command_ElementAdd::Command_ElementAdd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Command_2eproto::InitDefaultsCommand_ElementAdd();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:kk.proto.Command.ElementAdd)
}
Command_ElementAdd::Command_ElementAdd(const Command_ElementAdd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&elementid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(elementid_));
  // @@protoc_insertion_point(copy_constructor:kk.proto.Command.ElementAdd)
}

void Command_ElementAdd::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&elementid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(elementid_));
}

Command_ElementAdd::~Command_ElementAdd() {
  // @@protoc_insertion_point(destructor:kk.proto.Command.ElementAdd)
  SharedDtor();
}

void Command_ElementAdd::SharedDtor() {
}

void Command_ElementAdd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Command_ElementAdd::descriptor() {
  ::protobuf_Command_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Command_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Command_ElementAdd& Command_ElementAdd::default_instance() {
  ::protobuf_Command_2eproto::InitDefaultsCommand_ElementAdd();
  return *internal_default_instance();
}

Command_ElementAdd* Command_ElementAdd::New(::google::protobuf::Arena* arena) const {
  Command_ElementAdd* n = new Command_ElementAdd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Command_ElementAdd::Clear() {
// @@protoc_insertion_point(message_clear_start:kk.proto.Command.ElementAdd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&elementid_) -
        reinterpret_cast<char*>(&id_)) + sizeof(elementid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Command_ElementAdd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kk.proto.Command.ElementAdd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 elementId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_elementid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &elementid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kk.proto.Command.ElementAdd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kk.proto.Command.ElementAdd)
  return false;
#undef DO_
}

void Command_ElementAdd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kk.proto.Command.ElementAdd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 elementId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->elementid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kk.proto.Command.ElementAdd)
}

::google::protobuf::uint8* Command_ElementAdd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kk.proto.Command.ElementAdd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 elementId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->elementid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kk.proto.Command.ElementAdd)
  return target;
}

size_t Command_ElementAdd::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kk.proto.Command.ElementAdd)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_elementid()) {
    // required int32 elementId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->elementid());
  }

  return total_size;
}
size_t Command_ElementAdd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kk.proto.Command.ElementAdd)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 elementId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->elementid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Command_ElementAdd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kk.proto.Command.ElementAdd)
  GOOGLE_DCHECK_NE(&from, this);
  const Command_ElementAdd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Command_ElementAdd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kk.proto.Command.ElementAdd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kk.proto.Command.ElementAdd)
    MergeFrom(*source);
  }
}

void Command_ElementAdd::MergeFrom(const Command_ElementAdd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kk.proto.Command.ElementAdd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      elementid_ = from.elementid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Command_ElementAdd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kk.proto.Command.ElementAdd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Command_ElementAdd::CopyFrom(const Command_ElementAdd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kk.proto.Command.ElementAdd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Command_ElementAdd::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Command_ElementAdd::Swap(Command_ElementAdd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Command_ElementAdd::InternalSwap(Command_ElementAdd* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(elementid_, other->elementid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Command_ElementAdd::GetMetadata() const {
  protobuf_Command_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Command_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Command_ElementRemove::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Command_ElementRemove::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Command_ElementRemove::Command_ElementRemove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Command_2eproto::InitDefaultsCommand_ElementRemove();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:kk.proto.Command.ElementRemove)
}
Command_ElementRemove::Command_ElementRemove(const Command_ElementRemove& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:kk.proto.Command.ElementRemove)
}

void Command_ElementRemove::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
}

Command_ElementRemove::~Command_ElementRemove() {
  // @@protoc_insertion_point(destructor:kk.proto.Command.ElementRemove)
  SharedDtor();
}

void Command_ElementRemove::SharedDtor() {
}

void Command_ElementRemove::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Command_ElementRemove::descriptor() {
  ::protobuf_Command_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Command_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Command_ElementRemove& Command_ElementRemove::default_instance() {
  ::protobuf_Command_2eproto::InitDefaultsCommand_ElementRemove();
  return *internal_default_instance();
}

Command_ElementRemove* Command_ElementRemove::New(::google::protobuf::Arena* arena) const {
  Command_ElementRemove* n = new Command_ElementRemove;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Command_ElementRemove::Clear() {
// @@protoc_insertion_point(message_clear_start:kk.proto.Command.ElementRemove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Command_ElementRemove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kk.proto.Command.ElementRemove)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kk.proto.Command.ElementRemove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kk.proto.Command.ElementRemove)
  return false;
#undef DO_
}

void Command_ElementRemove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kk.proto.Command.ElementRemove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kk.proto.Command.ElementRemove)
}

::google::protobuf::uint8* Command_ElementRemove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kk.proto.Command.ElementRemove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kk.proto.Command.ElementRemove)
  return target;
}

size_t Command_ElementRemove::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kk.proto.Command.ElementRemove)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Command_ElementRemove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kk.proto.Command.ElementRemove)
  GOOGLE_DCHECK_NE(&from, this);
  const Command_ElementRemove* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Command_ElementRemove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kk.proto.Command.ElementRemove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kk.proto.Command.ElementRemove)
    MergeFrom(*source);
  }
}

void Command_ElementRemove::MergeFrom(const Command_ElementRemove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kk.proto.Command.ElementRemove)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void Command_ElementRemove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kk.proto.Command.ElementRemove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Command_ElementRemove::CopyFrom(const Command_ElementRemove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kk.proto.Command.ElementRemove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Command_ElementRemove::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Command_ElementRemove::Swap(Command_ElementRemove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Command_ElementRemove::InternalSwap(Command_ElementRemove* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Command_ElementRemove::GetMetadata() const {
  protobuf_Command_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Command_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Command_ElementAction::InitAsDefaultInstance() {
  ::kk::proto::_Command_ElementAction_default_instance_._instance.get_mutable()->event_ = const_cast< ::kk::proto::Event*>(
      ::kk::proto::Event::internal_default_instance());
}
void Command_ElementAction::clear_event() {
  if (event_ != NULL) event_->Clear();
  clear_has_event();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Command_ElementAction::kIdFieldNumber;
const int Command_ElementAction::kNameFieldNumber;
const int Command_ElementAction::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Command_ElementAction::Command_ElementAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Command_2eproto::InitDefaultsCommand_ElementAction();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:kk.proto.Command.ElementAction)
}
Command_ElementAction::Command_ElementAction(const Command_ElementAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_event()) {
    event_ = new ::kk::proto::Event(*from.event_);
  } else {
    event_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:kk.proto.Command.ElementAction)
}

void Command_ElementAction::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&event_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&event_)) + sizeof(id_));
}

Command_ElementAction::~Command_ElementAction() {
  // @@protoc_insertion_point(destructor:kk.proto.Command.ElementAction)
  SharedDtor();
}

void Command_ElementAction::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete event_;
}

void Command_ElementAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Command_ElementAction::descriptor() {
  ::protobuf_Command_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Command_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Command_ElementAction& Command_ElementAction::default_instance() {
  ::protobuf_Command_2eproto::InitDefaultsCommand_ElementAction();
  return *internal_default_instance();
}

Command_ElementAction* Command_ElementAction::New(::google::protobuf::Arena* arena) const {
  Command_ElementAction* n = new Command_ElementAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Command_ElementAction::Clear() {
// @@protoc_insertion_point(message_clear_start:kk.proto.Command.ElementAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(event_ != NULL);
      event_->Clear();
    }
  }
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Command_ElementAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kk.proto.Command.ElementAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kk.proto.Command.ElementAction.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .kk.proto.Event event = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kk.proto.Command.ElementAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kk.proto.Command.ElementAction)
  return false;
#undef DO_
}

void Command_ElementAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kk.proto.Command.ElementAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kk.proto.Command.ElementAction.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional .kk.proto.Event event = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->event_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kk.proto.Command.ElementAction)
}

::google::protobuf::uint8* Command_ElementAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kk.proto.Command.ElementAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kk.proto.Command.ElementAction.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional .kk.proto.Event event = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->event_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kk.proto.Command.ElementAction)
  return target;
}

size_t Command_ElementAction::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kk.proto.Command.ElementAction)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  return total_size;
}
size_t Command_ElementAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kk.proto.Command.ElementAction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .kk.proto.Event event = 3;
  if (has_event()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->event_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Command_ElementAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kk.proto.Command.ElementAction)
  GOOGLE_DCHECK_NE(&from, this);
  const Command_ElementAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Command_ElementAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kk.proto.Command.ElementAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kk.proto.Command.ElementAction)
    MergeFrom(*source);
  }
}

void Command_ElementAction::MergeFrom(const Command_ElementAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kk.proto.Command.ElementAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_event()->::kk::proto::Event::MergeFrom(from.event());
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Command_ElementAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kk.proto.Command.ElementAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Command_ElementAction::CopyFrom(const Command_ElementAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kk.proto.Command.ElementAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Command_ElementAction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  if (has_event()) {
    if (!this->event_->IsInitialized()) return false;
  }
  return true;
}

void Command_ElementAction::Swap(Command_ElementAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Command_ElementAction::InternalSwap(Command_ElementAction* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(event_, other->event_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Command_ElementAction::GetMetadata() const {
  protobuf_Command_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Command_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Command::InitAsDefaultInstance() {
  ::kk::proto::_Command_default_instance_._instance.get_mutable()->element_new_ = const_cast< ::kk::proto::Command_ElementNew*>(
      ::kk::proto::Command_ElementNew::internal_default_instance());
  ::kk::proto::_Command_default_instance_._instance.get_mutable()->element_property_ = const_cast< ::kk::proto::Command_ElementProperty*>(
      ::kk::proto::Command_ElementProperty::internal_default_instance());
  ::kk::proto::_Command_default_instance_._instance.get_mutable()->element_append_ = const_cast< ::kk::proto::Command_ElementAdd*>(
      ::kk::proto::Command_ElementAdd::internal_default_instance());
  ::kk::proto::_Command_default_instance_._instance.get_mutable()->element_before_ = const_cast< ::kk::proto::Command_ElementAdd*>(
      ::kk::proto::Command_ElementAdd::internal_default_instance());
  ::kk::proto::_Command_default_instance_._instance.get_mutable()->element_after_ = const_cast< ::kk::proto::Command_ElementAdd*>(
      ::kk::proto::Command_ElementAdd::internal_default_instance());
  ::kk::proto::_Command_default_instance_._instance.get_mutable()->element_remove_ = const_cast< ::kk::proto::Command_ElementAdd*>(
      ::kk::proto::Command_ElementAdd::internal_default_instance());
  ::kk::proto::_Command_default_instance_._instance.get_mutable()->element_action_ = const_cast< ::kk::proto::Command_ElementAction*>(
      ::kk::proto::Command_ElementAction::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Command::kTypeFieldNumber;
const int Command::kTimestampFieldNumber;
const int Command::kElementNewFieldNumber;
const int Command::kElementPropertyFieldNumber;
const int Command::kElementAppendFieldNumber;
const int Command::kElementBeforeFieldNumber;
const int Command::kElementAfterFieldNumber;
const int Command::kElementRemoveFieldNumber;
const int Command::kElementActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Command::Command()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Command_2eproto::InitDefaultsCommand();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:kk.proto.Command)
}
Command::Command(const Command& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_element_new()) {
    element_new_ = new ::kk::proto::Command_ElementNew(*from.element_new_);
  } else {
    element_new_ = NULL;
  }
  if (from.has_element_property()) {
    element_property_ = new ::kk::proto::Command_ElementProperty(*from.element_property_);
  } else {
    element_property_ = NULL;
  }
  if (from.has_element_append()) {
    element_append_ = new ::kk::proto::Command_ElementAdd(*from.element_append_);
  } else {
    element_append_ = NULL;
  }
  if (from.has_element_before()) {
    element_before_ = new ::kk::proto::Command_ElementAdd(*from.element_before_);
  } else {
    element_before_ = NULL;
  }
  if (from.has_element_after()) {
    element_after_ = new ::kk::proto::Command_ElementAdd(*from.element_after_);
  } else {
    element_after_ = NULL;
  }
  if (from.has_element_remove()) {
    element_remove_ = new ::kk::proto::Command_ElementAdd(*from.element_remove_);
  } else {
    element_remove_ = NULL;
  }
  if (from.has_element_action()) {
    element_action_ = new ::kk::proto::Command_ElementAction(*from.element_action_);
  } else {
    element_action_ = NULL;
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:kk.proto.Command)
}

void Command::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&element_new_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&element_new_)) + sizeof(type_));
}

Command::~Command() {
  // @@protoc_insertion_point(destructor:kk.proto.Command)
  SharedDtor();
}

void Command::SharedDtor() {
  if (this != internal_default_instance()) delete element_new_;
  if (this != internal_default_instance()) delete element_property_;
  if (this != internal_default_instance()) delete element_append_;
  if (this != internal_default_instance()) delete element_before_;
  if (this != internal_default_instance()) delete element_after_;
  if (this != internal_default_instance()) delete element_remove_;
  if (this != internal_default_instance()) delete element_action_;
}

void Command::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Command::descriptor() {
  ::protobuf_Command_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Command_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Command& Command::default_instance() {
  ::protobuf_Command_2eproto::InitDefaultsCommand();
  return *internal_default_instance();
}

Command* Command::New(::google::protobuf::Arena* arena) const {
  Command* n = new Command;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Command::Clear() {
// @@protoc_insertion_point(message_clear_start:kk.proto.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(element_new_ != NULL);
      element_new_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(element_property_ != NULL);
      element_property_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(element_append_ != NULL);
      element_append_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(element_before_ != NULL);
      element_before_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(element_after_ != NULL);
      element_after_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(element_remove_ != NULL);
      element_remove_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(element_action_ != NULL);
      element_action_->Clear();
    }
  }
  timestamp_ = GOOGLE_LONGLONG(0);
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Command::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kk.proto.Command)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .kk.proto.Command.Type type = 1 [default = ELEMENT_NEW];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::kk::proto::Command_Type_IsValid(value)) {
            set_type(static_cast< ::kk::proto::Command_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .kk.proto.Command.ElementNew element_new = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_element_new()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .kk.proto.Command.ElementProperty element_property = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_element_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .kk.proto.Command.ElementAdd element_append = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_element_append()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .kk.proto.Command.ElementAdd element_before = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_element_before()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .kk.proto.Command.ElementAdd element_after = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_element_after()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .kk.proto.Command.ElementAdd element_remove = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_element_remove()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .kk.proto.Command.ElementAction element_action = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_element_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kk.proto.Command)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kk.proto.Command)
  return false;
#undef DO_
}

void Command::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kk.proto.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .kk.proto.Command.Type type = 1 [default = ELEMENT_NEW];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required int64 timestamp = 2;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timestamp(), output);
  }

  // optional .kk.proto.Command.ElementNew element_new = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->element_new_, output);
  }

  // optional .kk.proto.Command.ElementProperty element_property = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->element_property_, output);
  }

  // optional .kk.proto.Command.ElementAdd element_append = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->element_append_, output);
  }

  // optional .kk.proto.Command.ElementAdd element_before = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->element_before_, output);
  }

  // optional .kk.proto.Command.ElementAdd element_after = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->element_after_, output);
  }

  // optional .kk.proto.Command.ElementAdd element_remove = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->element_remove_, output);
  }

  // optional .kk.proto.Command.ElementAction element_action = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->element_action_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kk.proto.Command)
}

::google::protobuf::uint8* Command::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kk.proto.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .kk.proto.Command.Type type = 1 [default = ELEMENT_NEW];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required int64 timestamp = 2;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timestamp(), target);
  }

  // optional .kk.proto.Command.ElementNew element_new = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->element_new_, deterministic, target);
  }

  // optional .kk.proto.Command.ElementProperty element_property = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->element_property_, deterministic, target);
  }

  // optional .kk.proto.Command.ElementAdd element_append = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->element_append_, deterministic, target);
  }

  // optional .kk.proto.Command.ElementAdd element_before = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->element_before_, deterministic, target);
  }

  // optional .kk.proto.Command.ElementAdd element_after = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->element_after_, deterministic, target);
  }

  // optional .kk.proto.Command.ElementAdd element_remove = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->element_remove_, deterministic, target);
  }

  // optional .kk.proto.Command.ElementAction element_action = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->element_action_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kk.proto.Command)
  return target;
}

size_t Command::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kk.proto.Command)
  size_t total_size = 0;

  if (has_timestamp()) {
    // required int64 timestamp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  if (has_type()) {
    // required .kk.proto.Command.Type type = 1 [default = ELEMENT_NEW];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
size_t Command::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kk.proto.Command)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000180) ^ 0x00000180) == 0) {  // All required fields are present.
    // required int64 timestamp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());

    // required .kk.proto.Command.Type type = 1 [default = ELEMENT_NEW];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional .kk.proto.Command.ElementNew element_new = 3;
    if (has_element_new()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->element_new_);
    }

    // optional .kk.proto.Command.ElementProperty element_property = 4;
    if (has_element_property()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->element_property_);
    }

    // optional .kk.proto.Command.ElementAdd element_append = 5;
    if (has_element_append()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->element_append_);
    }

    // optional .kk.proto.Command.ElementAdd element_before = 6;
    if (has_element_before()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->element_before_);
    }

    // optional .kk.proto.Command.ElementAdd element_after = 7;
    if (has_element_after()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->element_after_);
    }

    // optional .kk.proto.Command.ElementAdd element_remove = 8;
    if (has_element_remove()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->element_remove_);
    }

    // optional .kk.proto.Command.ElementAction element_action = 9;
    if (has_element_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->element_action_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Command::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kk.proto.Command)
  GOOGLE_DCHECK_NE(&from, this);
  const Command* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Command>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kk.proto.Command)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kk.proto.Command)
    MergeFrom(*source);
  }
}

void Command::MergeFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kk.proto.Command)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_element_new()->::kk::proto::Command_ElementNew::MergeFrom(from.element_new());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_element_property()->::kk::proto::Command_ElementProperty::MergeFrom(from.element_property());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_element_append()->::kk::proto::Command_ElementAdd::MergeFrom(from.element_append());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_element_before()->::kk::proto::Command_ElementAdd::MergeFrom(from.element_before());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_element_after()->::kk::proto::Command_ElementAdd::MergeFrom(from.element_after());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_element_remove()->::kk::proto::Command_ElementAdd::MergeFrom(from.element_remove());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_element_action()->::kk::proto::Command_ElementAction::MergeFrom(from.element_action());
    }
    if (cached_has_bits & 0x00000080u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_type(from.type());
  }
}

void Command::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kk.proto.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Command::CopyFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kk.proto.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Command::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000180) != 0x00000180) return false;
  if (has_element_new()) {
    if (!this->element_new_->IsInitialized()) return false;
  }
  if (has_element_property()) {
    if (!this->element_property_->IsInitialized()) return false;
  }
  if (has_element_append()) {
    if (!this->element_append_->IsInitialized()) return false;
  }
  if (has_element_before()) {
    if (!this->element_before_->IsInitialized()) return false;
  }
  if (has_element_after()) {
    if (!this->element_after_->IsInitialized()) return false;
  }
  if (has_element_remove()) {
    if (!this->element_remove_->IsInitialized()) return false;
  }
  if (has_element_action()) {
    if (!this->element_action_->IsInitialized()) return false;
  }
  return true;
}

void Command::Swap(Command* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Command::InternalSwap(Command* other) {
  using std::swap;
  swap(element_new_, other->element_new_);
  swap(element_property_, other->element_property_);
  swap(element_append_, other->element_append_);
  swap(element_before_, other->element_before_);
  swap(element_after_, other->element_after_);
  swap(element_remove_, other->element_remove_);
  swap(element_action_, other->element_action_);
  swap(timestamp_, other->timestamp_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Command::GetMetadata() const {
  protobuf_Command_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Command_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace kk

// @@protoc_insertion_point(global_scope)
